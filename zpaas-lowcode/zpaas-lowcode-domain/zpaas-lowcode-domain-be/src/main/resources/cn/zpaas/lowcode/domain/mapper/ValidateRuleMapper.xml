<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zpaas.lowcode.domain.mapper.ValidateRuleMapper">
  <resultMap id="BaseResultMap" type="cn.zpaas.lowcode.domain.eo.ValidateRule">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="rule_group_id" jdbcType="VARCHAR" property="ruleGroupId" />
    <result column="attribute_id" jdbcType="VARCHAR" property="attributeId" />
    <result column="sub_attribute_id" jdbcType="VARCHAR" property="subAttributeId" />
    <result column="rule_type_id" jdbcType="VARCHAR" property="ruleTypeId" />
    <result column="rule_value1" jdbcType="VARCHAR" property="ruleValue1" />
    <result column="rule_value2" jdbcType="VARCHAR" property="ruleValue2" />
    <result column="rule_value3" jdbcType="VARCHAR" property="ruleValue3" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="system_id" jdbcType="VARCHAR" property="systemId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, rule_group_id, attribute_id, sub_attribute_id, rule_type_id, rule_value1, rule_value2, 
    rule_value3, tenant_id, system_id, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="cn.zpaas.lowcode.domain.eo.ValidateRuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from be_validate_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from be_validate_rule
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from be_validate_rule
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zpaas.lowcode.domain.eo.ValidateRuleExample">
    delete from be_validate_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zpaas.lowcode.domain.eo.ValidateRule">
    insert into be_validate_rule (id, rule_group_id, attribute_id, 
      sub_attribute_id, rule_type_id, rule_value1, 
      rule_value2, rule_value3, tenant_id, 
      system_id, create_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{ruleGroupId,jdbcType=VARCHAR}, #{attributeId,jdbcType=VARCHAR}, 
      #{subAttributeId,jdbcType=VARCHAR}, #{ruleTypeId,jdbcType=VARCHAR}, #{ruleValue1,jdbcType=VARCHAR}, 
      #{ruleValue2,jdbcType=VARCHAR}, #{ruleValue3,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, 
      #{systemId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.zpaas.lowcode.domain.eo.ValidateRule">
    insert into be_validate_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ruleGroupId != null">
        rule_group_id,
      </if>
      <if test="attributeId != null">
        attribute_id,
      </if>
      <if test="subAttributeId != null">
        sub_attribute_id,
      </if>
      <if test="ruleTypeId != null">
        rule_type_id,
      </if>
      <if test="ruleValue1 != null">
        rule_value1,
      </if>
      <if test="ruleValue2 != null">
        rule_value2,
      </if>
      <if test="ruleValue3 != null">
        rule_value3,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="systemId != null">
        system_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="ruleGroupId != null">
        #{ruleGroupId,jdbcType=VARCHAR},
      </if>
      <if test="attributeId != null">
        #{attributeId,jdbcType=VARCHAR},
      </if>
      <if test="subAttributeId != null">
        #{subAttributeId,jdbcType=VARCHAR},
      </if>
      <if test="ruleTypeId != null">
        #{ruleTypeId,jdbcType=VARCHAR},
      </if>
      <if test="ruleValue1 != null">
        #{ruleValue1,jdbcType=VARCHAR},
      </if>
      <if test="ruleValue2 != null">
        #{ruleValue2,jdbcType=VARCHAR},
      </if>
      <if test="ruleValue3 != null">
        #{ruleValue3,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="systemId != null">
        #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zpaas.lowcode.domain.eo.ValidateRuleExample" resultType="java.lang.Long">
    select count(*) from be_validate_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update be_validate_rule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.ruleGroupId != null">
        rule_group_id = #{record.ruleGroupId,jdbcType=VARCHAR},
      </if>
      <if test="record.attributeId != null">
        attribute_id = #{record.attributeId,jdbcType=VARCHAR},
      </if>
      <if test="record.subAttributeId != null">
        sub_attribute_id = #{record.subAttributeId,jdbcType=VARCHAR},
      </if>
      <if test="record.ruleTypeId != null">
        rule_type_id = #{record.ruleTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.ruleValue1 != null">
        rule_value1 = #{record.ruleValue1,jdbcType=VARCHAR},
      </if>
      <if test="record.ruleValue2 != null">
        rule_value2 = #{record.ruleValue2,jdbcType=VARCHAR},
      </if>
      <if test="record.ruleValue3 != null">
        rule_value3 = #{record.ruleValue3,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.systemId != null">
        system_id = #{record.systemId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update be_validate_rule
    set id = #{record.id,jdbcType=VARCHAR},
      rule_group_id = #{record.ruleGroupId,jdbcType=VARCHAR},
      attribute_id = #{record.attributeId,jdbcType=VARCHAR},
      sub_attribute_id = #{record.subAttributeId,jdbcType=VARCHAR},
      rule_type_id = #{record.ruleTypeId,jdbcType=VARCHAR},
      rule_value1 = #{record.ruleValue1,jdbcType=VARCHAR},
      rule_value2 = #{record.ruleValue2,jdbcType=VARCHAR},
      rule_value3 = #{record.ruleValue3,jdbcType=VARCHAR},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      system_id = #{record.systemId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zpaas.lowcode.domain.eo.ValidateRule">
    update be_validate_rule
    <set>
      <if test="ruleGroupId != null">
        rule_group_id = #{ruleGroupId,jdbcType=VARCHAR},
      </if>
      <if test="attributeId != null">
        attribute_id = #{attributeId,jdbcType=VARCHAR},
      </if>
      <if test="subAttributeId != null">
        sub_attribute_id = #{subAttributeId,jdbcType=VARCHAR},
      </if>
      <if test="ruleTypeId != null">
        rule_type_id = #{ruleTypeId,jdbcType=VARCHAR},
      </if>
      <if test="ruleValue1 != null">
        rule_value1 = #{ruleValue1,jdbcType=VARCHAR},
      </if>
      <if test="ruleValue2 != null">
        rule_value2 = #{ruleValue2,jdbcType=VARCHAR},
      </if>
      <if test="ruleValue3 != null">
        rule_value3 = #{ruleValue3,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="systemId != null">
        system_id = #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zpaas.lowcode.domain.eo.ValidateRule">
    update be_validate_rule
    set rule_group_id = #{ruleGroupId,jdbcType=VARCHAR},
      attribute_id = #{attributeId,jdbcType=VARCHAR},
      sub_attribute_id = #{subAttributeId,jdbcType=VARCHAR},
      rule_type_id = #{ruleTypeId,jdbcType=VARCHAR},
      rule_value1 = #{ruleValue1,jdbcType=VARCHAR},
      rule_value2 = #{ruleValue2,jdbcType=VARCHAR},
      rule_value3 = #{ruleValue3,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=VARCHAR},
      system_id = #{systemId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>