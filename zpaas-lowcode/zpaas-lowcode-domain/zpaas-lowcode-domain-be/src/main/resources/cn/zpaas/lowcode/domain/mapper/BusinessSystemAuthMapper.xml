<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zpaas.lowcode.domain.mapper.BusinessSystemAuthMapper">
  <resultMap id="BaseResultMap" type="cn.zpaas.lowcode.domain.eo.BusinessSystemAuth">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="auth_type" jdbcType="VARCHAR" property="authType" />
    <result column="user_info_key" jdbcType="VARCHAR" property="userInfoKey" />
    <result column="user_id_attr" jdbcType="VARCHAR" property="userIdAttr" />
    <result column="user_info_service" jdbcType="VARCHAR" property="userInfoService" />
    <result column="user_info_method" jdbcType="VARCHAR" property="userInfoMethod" />
    <result column="auth_config" jdbcType="VARCHAR" property="authConfig" />
    <result column="ignore_urls" jdbcType="VARCHAR" property="ignoreUrls" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="system_id" jdbcType="VARCHAR" property="systemId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, auth_type, user_info_key, user_id_attr, user_info_service, user_info_method, 
    auth_config, ignore_urls, tenant_id, system_id, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="cn.zpaas.lowcode.domain.eo.BusinessSystemAuthExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from be_business_system_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from be_business_system_auth
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from be_business_system_auth
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zpaas.lowcode.domain.eo.BusinessSystemAuthExample">
    delete from be_business_system_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zpaas.lowcode.domain.eo.BusinessSystemAuth">
    insert into be_business_system_auth (id, auth_type, user_info_key, 
      user_id_attr, user_info_service, user_info_method, 
      auth_config, ignore_urls, tenant_id, 
      system_id, create_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{authType,jdbcType=VARCHAR}, #{userInfoKey,jdbcType=VARCHAR}, 
      #{userIdAttr,jdbcType=VARCHAR}, #{userInfoService,jdbcType=VARCHAR}, #{userInfoMethod,jdbcType=VARCHAR}, 
      #{authConfig,jdbcType=VARCHAR}, #{ignoreUrls,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, 
      #{systemId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.zpaas.lowcode.domain.eo.BusinessSystemAuth">
    insert into be_business_system_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="authType != null">
        auth_type,
      </if>
      <if test="userInfoKey != null">
        user_info_key,
      </if>
      <if test="userIdAttr != null">
        user_id_attr,
      </if>
      <if test="userInfoService != null">
        user_info_service,
      </if>
      <if test="userInfoMethod != null">
        user_info_method,
      </if>
      <if test="authConfig != null">
        auth_config,
      </if>
      <if test="ignoreUrls != null">
        ignore_urls,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="systemId != null">
        system_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="authType != null">
        #{authType,jdbcType=VARCHAR},
      </if>
      <if test="userInfoKey != null">
        #{userInfoKey,jdbcType=VARCHAR},
      </if>
      <if test="userIdAttr != null">
        #{userIdAttr,jdbcType=VARCHAR},
      </if>
      <if test="userInfoService != null">
        #{userInfoService,jdbcType=VARCHAR},
      </if>
      <if test="userInfoMethod != null">
        #{userInfoMethod,jdbcType=VARCHAR},
      </if>
      <if test="authConfig != null">
        #{authConfig,jdbcType=VARCHAR},
      </if>
      <if test="ignoreUrls != null">
        #{ignoreUrls,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="systemId != null">
        #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zpaas.lowcode.domain.eo.BusinessSystemAuthExample" resultType="java.lang.Long">
    select count(*) from be_business_system_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update be_business_system_auth
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.authType != null">
        auth_type = #{record.authType,jdbcType=VARCHAR},
      </if>
      <if test="record.userInfoKey != null">
        user_info_key = #{record.userInfoKey,jdbcType=VARCHAR},
      </if>
      <if test="record.userIdAttr != null">
        user_id_attr = #{record.userIdAttr,jdbcType=VARCHAR},
      </if>
      <if test="record.userInfoService != null">
        user_info_service = #{record.userInfoService,jdbcType=VARCHAR},
      </if>
      <if test="record.userInfoMethod != null">
        user_info_method = #{record.userInfoMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.authConfig != null">
        auth_config = #{record.authConfig,jdbcType=VARCHAR},
      </if>
      <if test="record.ignoreUrls != null">
        ignore_urls = #{record.ignoreUrls,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.systemId != null">
        system_id = #{record.systemId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update be_business_system_auth
    set id = #{record.id,jdbcType=VARCHAR},
      auth_type = #{record.authType,jdbcType=VARCHAR},
      user_info_key = #{record.userInfoKey,jdbcType=VARCHAR},
      user_id_attr = #{record.userIdAttr,jdbcType=VARCHAR},
      user_info_service = #{record.userInfoService,jdbcType=VARCHAR},
      user_info_method = #{record.userInfoMethod,jdbcType=VARCHAR},
      auth_config = #{record.authConfig,jdbcType=VARCHAR},
      ignore_urls = #{record.ignoreUrls,jdbcType=VARCHAR},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      system_id = #{record.systemId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zpaas.lowcode.domain.eo.BusinessSystemAuth">
    update be_business_system_auth
    <set>
      <if test="authType != null">
        auth_type = #{authType,jdbcType=VARCHAR},
      </if>
      <if test="userInfoKey != null">
        user_info_key = #{userInfoKey,jdbcType=VARCHAR},
      </if>
      <if test="userIdAttr != null">
        user_id_attr = #{userIdAttr,jdbcType=VARCHAR},
      </if>
      <if test="userInfoService != null">
        user_info_service = #{userInfoService,jdbcType=VARCHAR},
      </if>
      <if test="userInfoMethod != null">
        user_info_method = #{userInfoMethod,jdbcType=VARCHAR},
      </if>
      <if test="authConfig != null">
        auth_config = #{authConfig,jdbcType=VARCHAR},
      </if>
      <if test="ignoreUrls != null">
        ignore_urls = #{ignoreUrls,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="systemId != null">
        system_id = #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zpaas.lowcode.domain.eo.BusinessSystemAuth">
    update be_business_system_auth
    set auth_type = #{authType,jdbcType=VARCHAR},
      user_info_key = #{userInfoKey,jdbcType=VARCHAR},
      user_id_attr = #{userIdAttr,jdbcType=VARCHAR},
      user_info_service = #{userInfoService,jdbcType=VARCHAR},
      user_info_method = #{userInfoMethod,jdbcType=VARCHAR},
      auth_config = #{authConfig,jdbcType=VARCHAR},
      ignore_urls = #{ignoreUrls,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=VARCHAR},
      system_id = #{systemId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>