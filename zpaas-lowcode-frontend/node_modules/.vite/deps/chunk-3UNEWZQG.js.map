{
  "version": 3,
  "sources": ["../../bpmn-js/lib/features/popup-menu/util/TypeUtil.js"],
  "sourcesContent": ["import {\n  getBusinessObject\n} from '../../../util/ModelUtil';\n\nimport {\n  isExpanded\n} from '../../../util/DiUtil';\n\n/**\n * @typedef {import('../../../model/Types').Element} Element\n * @typedef {import('diagram-js/lib/features/popup-menu/PopupMenu').PopupMenuTarget} PopupMenuTarget\n *\n * @typedef {(entry: PopupMenuTarget) => boolean} DifferentTypeValidator\n */\n\n/**\n * Returns true, if an element is from a different type\n * than a target definition. Takes into account the type,\n * event definition type and triggeredByEvent property.\n *\n * @param {Element} element\n *\n * @return {DifferentTypeValidator}\n */\nexport function isDifferentType(element) {\n\n  return function(entry) {\n    var target = entry.target;\n\n    var businessObject = getBusinessObject(element),\n        eventDefinition = businessObject.eventDefinitions && businessObject.eventDefinitions[0];\n\n    var isTypeEqual = businessObject.$type === target.type;\n\n    var isEventDefinitionEqual = (\n      (eventDefinition && eventDefinition.$type) === target.eventDefinitionType\n    );\n\n    var isTriggeredByEventEqual = (\n\n      // coherse to <false>\n      !!target.triggeredByEvent === !!businessObject.triggeredByEvent\n    );\n\n    var isExpandedEqual = (\n      target.isExpanded === undefined ||\n      target.isExpanded === isExpanded(element)\n    );\n\n    return !isTypeEqual || !isEventDefinitionEqual || !isTriggeredByEventEqual || !isExpandedEqual;\n  };\n}\n"],
  "mappings": ";;;;;;;;AAwBO,SAAS,gBAAgB,SAAS;AAEvC,SAAO,SAAS,OAAO;AACrB,QAAI,SAAS,MAAM;AAEnB,QAAI,iBAAiB,kBAAkB,OAAO,GAC1C,kBAAkB,eAAe,oBAAoB,eAAe,iBAAiB,CAAC;AAE1F,QAAI,cAAc,eAAe,UAAU,OAAO;AAElD,QAAI,0BACD,mBAAmB,gBAAgB,WAAW,OAAO;AAGxD,QAAI;AAAA;AAAA,MAGF,CAAC,CAAC,OAAO,qBAAqB,CAAC,CAAC,eAAe;AAAA;AAGjD,QAAI,kBACF,OAAO,eAAe,UACtB,OAAO,eAAe,WAAW,OAAO;AAG1C,WAAO,CAAC,eAAe,CAAC,0BAA0B,CAAC,2BAA2B,CAAC;AAAA,EACjF;AACF;",
  "names": []
}
